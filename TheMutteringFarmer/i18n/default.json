{
    //Query item id : https://mateusaquino.github.io/stardewids/
    //Event Key Generactor : https://sorrylab.com/StardewValley/TFMGenerator.html
    //GMCM
    "GMCM.SectionTitle.TheMutteringFarmer": "The Muttering Farmer",
    "GMCM.Enable": "Enable",
    "GMCM.DialogueRate": "Dialogue Bubble Appearance Rate (%)",
    "GMCM.DialogueSound": "Dialogue Bubble Sound",
    "GMCM.SectionTitle.EventSwitch": "Event Switch",
    "GMCM.CharacterDetectRange": "Character Event Radius (tiles)",
    "GMCM.CharacterDetectRange.desc": "Distance to trigger NPC-related nearby events, including villagers, spouse, children, and pets.",
    "GMCM.ObjectDetectRange": "Object Event Radius (tiles)",
    "GMCM.ObjectDetectRange.desc": "Distance to trigger object-related Nearby events, including forageables and artifact spots.",
    "GMCM.CropDetectRange": "Crop Event Radius (tiles)",
    "GMCM.CropDetectRange.desc": "Distance to trigger crop-related Nearby events.",
    // If the key matches a specific format, it will be recognized by the mod and displayed during related events.
    // If there are any lines you don't like, simply delete them — they will disappear from the game without causing other issues.
    //
    // Adding ":number" allows the system to randomly select one line from a group, increasing dialogue variety.
    // You can dynamically add more random lines here — as long as the numbers are not duplicated, they don't need to be consecutive.
    //
    // In the examples below, words enclosed in {} are dynamic strings such as names or item names.
    // Breaking their structure will prevent the program from replacing them correctly.
    "Farmer.TakeDamage:0": "Ouch!",
    "Farmer.TakeDamage:1": "That {monster} packs a punch!",
    "Farmer.TakeDamage:2": "Oof! That hurts!",
    "Monster.Killed:0": "Down you go, {monster}!",
    "Monster.Killed:1": "I won!",
    "Monster.Killed:2": "I beat {monster}!",
    "Monster.TakeDamage:0": "Take that!",
    "Monster.TakeDamage:1": "Hiya!",
    "Monster.TakeDamage:2": "Here’s another hit!",
    "Monster.Nearby:0": "It's {monster}! Stay alert!",
    "Monster.Nearby:1": "Watch out, it’s a {monster}!",
    "Monster.Nearby:2": "{monster} ahead!",
    "Inventory.GetItem(*):0": "Acquired {item}.",
    "Inventory.GetItem(*):1": "Nice, {item} in the bag!",
    // The # symbol indicates that this line is linked to another line, and will use the sentence from the referenced key as a replacement.
    // Nested or chained references are not supported.
    // #Fish refers to items in the Fish category and takes precedence over (*) wildcard matches.
    // Supported item categories include: #Vegetable, #Fruit, #Flower, #Forage, #AnimalProduct, #Cooking, #Fish, and #Junk.
    "Inventory.GetItem(#Fish):0": "#Inventory.GetItem(*)",
    // If a specific item ID is provided, a unique reaction for that item will appear, with the highest priority.
    "Inventory.Full:0": "Ugh, my bag’s stuffed!",
    "Inventory.Full:1": "Bag can't hold any more items...",
    "Inventory.Full:2": "Oh, No room left...",
    "Child.Nearby:0": "#Npc.Nearby(*)(Heart>=4)",
    "Pet.Nearby:0": "#Npc.Nearby(*)(Heart>=4)",
    "Horse.Nearby:0": "#Npc.Nearby(*)(Heart>=4)",
    "Npc.Nearby.Many:0": "So many people near {npc}...",
    "Npc.Nearby.Many:1": "Wow, so many people gathered!",
    "Npc.Nearby.Many:2": "So lively!",
    "Npc.Nearby(*)(Stranger):0": "Who’s that over there?",
    "Npc.Nearby(*)(Stranger):1": "Haven’t seen them before...",
    "Npc.Nearby(*)(Stranger):2": "A friend from town?",
    // (Heart>=0) The higher the heart level, the higher the priority. Only the >= operator is supported.
    "Npc.Nearby(*)(Heart>=0):0": "It's {npc}.",
    "Npc.Nearby(*)(Heart>=0):1": "I see {npc}.",
    "Npc.Nearby(*)(Heart>=0):2": "Oh... {npc}?",
    "Npc.Nearby(*)(Heart>=4):0": "Hey! {npc}!",
    "Npc.Nearby(*)(Heart>=4):1": "Hello, {npc}!",
    "Npc.Nearby(*)(Heart>=4):2": "{npc}, what’s up?",
    // Birthday characters have the highest priority.
    "BirthdayNpc.Nearby(*)(Heart>=0):0": "{npc} is the birthday star today!",
    "BirthdayNpc.Nearby(*)(Heart>=4):0": "{npc}, happy birthday!",
    // The following example is a unique dialogue for encountering Sam.
    // Assigning a specific character will take priority over the (*) wildcard.
    "Npc.Nearby(Sam)(Stranger):0": "#Npc.Nearby(*)(Stranger)",
    "Npc.Nearby(Sam)(Heart>=0):0": "#Npc.Nearby(*)(Heart>=0)",
    "DatingNpc.Nearby(*)(Heart>=0):0": "#Npc.Nearby(*)(Heart>=4)",
    // A single "_" symbol means to ignore this entry.
    "DivorcedNpc.Nearby(*)(Heart>=0):0": "_",
    "Spouse.Nearby(*)(Heart>=0):0": "#Npc.Nearby(*)(Heart>=4)",
    "Roommate.Nearby(*)(Heart>=0):0": "#Npc.Nearby(*)(Heart>=4)",
    "Farmer.SelectTool(Hoe):0": "Hoe’s ready, let’s farm!",
    "Farmer.SelectTool(Hoe):1": "Time to get my hands dirty!",
    "Farmer.SelectTool(Hoe):2": "Switch to hoe!",
    "Farmer.SelectTool(Pickaxe):0": "Time to break some rocks!",
    "Farmer.SelectTool(Pickaxe):1": "I want to clear obstacles...",
    "Farmer.SelectTool(Pickaxe):2": "Switch to pickaxe!",
    "Farmer.SelectTool(Axe):0": "Ready to chop trees...",
    "Farmer.SelectTool(Axe):1": "Logging time!",
    "Farmer.SelectTool(Axe):2": "Switch to axe!",
    "Farmer.SelectTool(WateringCan):0": "Any crops need watering?",
    "Farmer.SelectTool(WateringCan):1": "Crops need water!",
    "Farmer.SelectTool(WateringCan):2": "Watering can!",
    "Farmer.SelectTool(FishingRod):0": "Reel’s ready, fish beware!",
    "Farmer.SelectTool(FishingRod):1": "Let's go fishing!",
    "Farmer.SelectTool(FishingRod):2": "Switch to fishing rod!",
    "Farmer.SelectTool(MilkPail):0": "_",
    "Farmer.SelectTool(Shears):0": "_",
    "Farmer.SelectTool(Slingshot):0": "_",
    "Farmer.SelectTool(Scythe):0": "Any weeds nearby?",
    "Farmer.SelectTool(Scythe):1": "Let's clear some weeds...",
    "Farmer.SelectTool(Scythe):2": "Switch to scythe!",
    "Farmer.SelectTool(MeleeWeapon):0": "Check out my {item}!",
    "Farmer.SelectTool(MeleeWeapon):1": "Ready for combat...",
    "Farmer.SelectItem(*):0": "{item}...",
    "Farmer.SelectItem(*):1": "{item}.",
    "Farmer.SelectItem(*):2": "Oh, this is {item}.",
    "Farmer.SelectItem(72):0": "#Farmer.SelectItem(*)",
    "Farmer.Arrive(*):0": "_",
    // Example of reacting to a specific food item.
    "Farmer.Eat(260):0": "Wow... so spicy!",
    "Farmer.Eat(245):0": "Too sweet...",
    "Farmer.Eat(246):0": "My mouth is full of powder...",
    "Farmer.Eat(247):0": "Greasy taste... not very healthy...",
    "Farmer.Eat(419):0": "Such a sharp sour taste...",
    "Farmer.Eat(423):0": "It's like chewing hard grains...",
    "Farmer.Eat(346):0": "Energy is surging!",
    "Farmer.Eat(351):0": "Ready to keep working after this drink!",
    "Farmer.Eat(847):0": "It's wriggling in my mouth!",
    // Food that reduces stamina.
    "Farmer.Eat.Disgusting:0": "I got food poisoning...",
    "Farmer.Eat.Disgusting:1": "{item} tastes like hell...",
    "Farmer.Eat.Disgusting:2": "What did I just eat...",
    "Farmer.Eat.Disgusting:3": "My stomach feels uneasy...",
    "Farmer.Eat.Disgusting:4": "{item} tastes like smelly socks...",
    "Farmer.Eat.Disgusting:5": "{item} is gross...",
    // Food that restores less than 25 stamina.
    "Farmer.Eat.Bland(*):0": "The taste is a bit subtle...",
    "Farmer.Eat.Bland(*):1": "{item} isn't meant to be eaten raw...",
    "Farmer.Eat.Bland(*):2": "Like chewing weeds...",
    "Farmer.Eat.Bland(#Vegetable):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#Fruit):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#Flower):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#Forage):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#AnimalProduct):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#Cooking):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Eat.Bland(#Fish):0": "Fishy smell...",
    "Farmer.Eat.Bland(#Fish):1": "Strong fishy taste...",
    "Farmer.Eat.Bland(#Fish):2": "Ugh, this fish needs some cooking...",
    "Farmer.Eat.Bland(#Junk):0": "#Farmer.Eat.Bland(*)",
    // Food that restores 25 or more stamina.
    "Farmer.Eat.Delicious(*):0": "Delicious!",
    "Farmer.Eat.Delicious(*):1": "So tasty...",
    "Farmer.Eat.Delicious(*):2": "Great flavor!",
    "Farmer.Eat.Delicious(#Vegetable):0": "#Custom.Eat.Delicious(Crop)",
    "Farmer.Eat.Delicious(#Fruit):0": "#Custom.Eat.Delicious(Crop)",
    "Farmer.Eat.Delicious(#Flower):0": "#Custom.Eat.Delicious(Crop)",
    "Farmer.Eat.Delicious(#Forage):0": "#Custom.Eat.Delicious(Crop)",
    "Farmer.Eat.Delicious(#AnimalProduct):0": "#Farmer.Eat.Delicious(*)",
    "Farmer.Eat.Delicious(#Cooking):0": "#Farmer.Eat.Delicious(*)",
    "Farmer.Eat.Delicious(#Fish):0": "#Farmer.Eat.Delicious(*)",
    "Farmer.Eat.Delicious(#Junk):0": "#Farmer.Eat.Delicious(*)",
    // "Drink" refers to beverages; the operation rules are the same as for "Eat."
    "Farmer.Drink(395):0": "#Custom.DrinkCoffee",
    "Farmer.Drink(253):0": "#Custom.DrinkCoffee",
    "Farmer.Drink.Disgusting:0": "#Farmer.Eat.Disgusting",
    "Farmer.Drink.Bland(*):0": "#Farmer.Eat.Bland(*)",
    "Farmer.Drink.Delicious(*):0": "Tastes great!",
    "Tree.Fall:0": "The tree is down!",
    "Tree.Fall:1": "Chopped down...",
    "ResourceClump.Destroy(*):0": "_",
    "ResourceClump.Destroy(Stump):0": "Finally chopped it up!",
    "ResourceClump.Destroy(Stump):1": "Goodbye, pesky stump.",
    "ResourceClump.Destroy(Stump):2": "So much hardwood dropped...",
    "ResourceClump.Destroy(Log):0": "#ResourceClump.Destroy(Stump)",
    "ResourceClump.Destroy(Rock):0": "Finally smashed it!",
    "ResourceClump.Destroy(Rock):1": "The obstructing rock is gone!",
    "ResourceClump.Destroy(Rock):2": "Smashed it good!",
    "ResourceClump.Destroy(Meteorite):0": "#ResourceClump.Destroy(Rock)",
    "ResourceClump.Destroy(Boulder):0": "#ResourceClump.Destroy(Rock)",
    "Object.Destroy(*):0": "_",
    // Minerals that usually only drop stones.
    "Object.Destroy(#StoneNodes):0": "Smashed it!",
    "Object.Destroy(#StoneNodes):1": "Breaking rocks!",
    // Special minerals that drop more than just stones when broken.
    "Object.Destroy(#SpecialNodes):0": "_",
    "Object.Destroy(Twig):0": "Removed a twig!",
    "Object.Destroy(Twig):2": "Cleared a twig!",
    "Object.Destroy(Weeds):0": "Weeding!",
    "Object.Destroy(Weeds):1": "Clearing weeds!",
    // Crystals in the frozen area of the mine.
    "Object.Destroy(Crystal):0": "_",
    "Object.Destroy(ArtifactSpot):0": "What did I dig up?",
    "Object.Destroy(ArtifactSpot):1": "Dug up some item...",
    "Object.Destroy(ArtifactSpot):2": "Seems like I dug up something...",
    "Object.Destroy(SeedSpot):0": "#Object.Destroy(ArtifactSpot)",
    "Crop.Mature.Nearby(*):0": "{item} is ready to harvest!",
    "Crop.Mature.Nearby(*):1": "{item} is ripe!",
    "Forage.Nearby(*):0": "It's {item}!",
    "Forage.Nearby(*):1": "Found {item}!",
    // The following added locations will trigger related dialogue upon arrival.
    "Farmer.Arrive(Backwoods):0": "#Custom.Arrive",
    "Farmer.Arrive(Mountain):0": "#Custom.Arrive",
    "Farmer.Arrive(Beach):0": "#Custom.Arrive",
    "Farmer.Arrive(Forest):0": "#Custom.Arrive",
    "Farmer.Arrive(Sewer):0": "#Custom.Arrive",
    "Farmer.Arrive(Town):0": "#Custom.Arrive",
    "Farmer.Arrive(Desert):0": "#Custom.Arrive",
    "Farmer.Arrive(BusStop):0": "#Custom.Arrive",
    "Farmer.Arrive(Railroad):0": "#Custom.Arrive",
    "Farmer.Arrive(Mine):0": "#Custom.Arrive.Danger",
    "Farmer.Arrive(SkullCave):0": "#Custom.Arrive.Danger",
    // Sentences in the Custom series are not part of in-game events but are specially organized in the i18n files.
    // They serve as targets for the above events using # references.
    "Custom.DrinkCoffee:0": "Feeling energized!",
    "Custom.DrinkCoffee:1": "I feel like I'm walking faster...",
    "Custom.DrinkCoffee:2": "So invigorating...",
    "Custom.Eat.Delicious(Crop):0": "{item} tastes so fresh!",
    "Custom.Eat.Delicious(Crop):1": "Tastes like nature!",
    "Custom.Eat.Delicious(Crop):2": "{item} is a delicious ingredient!",
    "Custom.Arrive.Danger:0": "This place feels dangerous...",
    "Custom.Arrive.Danger:1": "Monsters lurk below, I must be careful...",
    "Custom.Arrive.Danger:2": "This place is dangerous, I need to ready my weapon...",
    "Custom.Arrive:0": "This is {location}...",
    "Custom.Arrive:1": "I've arrived at {location}...",
    "Custom.Pass": "_",
    //SVE exclusive
    "Farmer.Arrive(Custom_BlueMoonVineyard):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_ForestWest):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Highlands):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_SpriteSpring2):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_AdventurerSummit):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_ShearwaterBridge):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_JunimoWoods):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_HighlandsCavern):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_CrimsonBadlands):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_FableReef):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_SVESummit):0": "#Custom.Arrive",
    //RSV exclusive
    "Npc.Nearby(Torts)(Stranger):0": "I saw a turtle...",
    "Farmer.Arrive(Custom_Ridgeside_RSVCableCar):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RSVCliff):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RidgesideVillage):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RSVTheHike):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_AguarCave):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_Ridge):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RidgeFalls):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RidgePond):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RidgeForest):0": "#Custom.Arrive",
    "Farmer.Arrive(Custom_Ridgeside_RSVGreenhouse1):0": "#Custom.Arrive",
    //ES exclusive
    "Npc.Nearby(Lexi)(Stranger):0": "What kind of creature is that...?",
    "Farmer.Arrive(EastScarp_Village):0": "#Custom.Arrive",
    "Farmer.Arrive(EastScarp_DeepMountains):0": "#Custom.Arrive",
    "Farmer.Arrive(EastScarp_Orchard):0": "#Custom.Arrive"
}